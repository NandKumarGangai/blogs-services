{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","themeProvider/index.js","routes/index.js","App.js","index.js"],"names":["AppReducer","state","type","data","transactions","filter","transaction","_id","loading","error","HOST","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","getTransactions","a","Axios","get","res","console","log","response","deleteTransaction","id","delete","addTransaction","config","headers","post","Provider","value","ThemeProviderApp","theme","React","useMemo","createMuiTheme","palette","ThemeProvider","CssBaseline","LoginPageComponent","lazy","BlogPageComponent","BlogsOverviewComponent","CreateNewBlogPageComponent","appRoutes","route","isPrivate","Component","STORAGE","RedirectComponent","to","mapRoutes","isLogin","exact","path","render","props","createRoutes","map","App","fallback","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fcac2e8.chunk.js","sourcesContent":["const AppReducer = (state, { type, data }) => {\r\n    switch (type) {\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction._id !== data)\r\n            }\r\n\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [ ...state.transactions, data ]\r\n            }\r\n\r\n        case 'GET_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                transactions: data\r\n            }\r\n\r\n        case 'TRANSACTION_ERROR':\r\n            return {\r\n                ...state,\r\n                error: data\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default AppReducer;","import React, { createContext, useReducer } from 'react';\r\nimport Axios from 'axios';\r\nimport AppReducer from './AppReducer';\r\n\r\nconst HOST = 'https://expense-tracker-server-96.herokuapp.com';\r\n\r\nconst initialState = {\r\n    transactions: [],\r\n    error: null,\r\n    loading: true\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    const getTransactions = async () => {\r\n        try {\r\n            const res = await Axios.get(`${HOST}/api/v1/transactions`);\r\n            console.log(res.data);\r\n            dispatch({\r\n                type: 'GET_TRANSACTION',\r\n                data: res.data.data\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                data: error.response.data.error || { error: 'error occured...'}\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteTransaction = async (id) => {\r\n        try {\r\n            await Axios.delete(`${HOST}/api/v1/transactions/${id}`);\r\n\r\n            dispatch({\r\n                type: 'DELETE_TRANSACTION',\r\n                data: id\r\n            });        \r\n        } catch (error) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                data: error.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    const addTransaction = async (transaction) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n            const res = await Axios.post(`${HOST}/api/v1/transactions`, transaction, config);\r\n\r\n            dispatch({\r\n                type: 'ADD_TRANSACTION',\r\n                data: res.data.data\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                data: error.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            transactions: state.transactions,\r\n            error: state.error,\r\n            loading: state.loading,\r\n            getTransactions,\r\n            deleteTransaction,\r\n            addTransaction\r\n        }}>\r\n            { children }\r\n        </GlobalContext.Provider>\r\n    )\r\n}","import React from 'react';\r\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nconst ThemeProviderApp = ({ children }) => {\r\n  const prefersDarkMode = true; //useMediaQuery('(prefers-color-scheme: dark)');\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        palette: {\r\n          type: prefersDarkMode ? 'dark' : 'light',\r\n        },\r\n      }),\r\n    [prefersDarkMode],\r\n  );\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline/>\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default ThemeProviderApp;","import { lazy } from 'react';\r\n\r\nconst HomePageComponent = lazy(() => import('../pages/HomePage'));\r\nconst LoginPageComponent = lazy(() => import('../pages/LoginPage'));\r\nconst BlogPageComponent = lazy(() => import('../pages/BlogPage'));\r\nconst BlogsOverviewComponent = lazy(() => import('../pages/BlogsOverview'));\r\nconst CreateNewBlogPageComponent = lazy(() => import('../pages/CreateNewBlogPage'));\r\n\r\nexport const appRoutes = [\r\n    {\r\n        route: '/',\r\n        isPrivate: false,\r\n        // Component: HomePageComponent\r\n        Component: CreateNewBlogPageComponent\r\n    },\r\n    {\r\n        route: '/admin/login',\r\n        isPrivate: false,\r\n        Component: LoginPageComponent\r\n    },\r\n    {\r\n        route: '/blog/:title',\r\n        isPrivate: false,\r\n        Component: BlogPageComponent\r\n    },\r\n    {\r\n        route: '/admin/overview',\r\n        isPrivate: false,\r\n        Component: BlogsOverviewComponent\r\n    },\r\n    {\r\n        route: '/admin/new',\r\n        isPrivate: false,\r\n        Component: CreateNewBlogPageComponent\r\n    }\r\n];","import React, { Suspense } from 'react';\nimport { Redirect, Route, BrowserRouter } from \"react-router-dom\";\n\nimport { GlobalProvider } from './context/GlobalState';\nimport ThemeProviderApp from './themeProvider';\n\nimport { appRoutes } from './routes';\n\nconst STORAGE = {\n  getToken: () => { }\n};\n\nconst renderLoader = () => <h1>Loading...</h1>;\n\nconst RedirectComponent = () => <Redirect to='/login' />;\n\nconst mapRoutes = ({ route, isPrivate, Component }) => {\n  const isLogin = STORAGE.getToken() || false;\n  console.log('login status: ', isLogin);\n\n  return (<Route\n    exact path={route}\n    render={props => (\n      isPrivate && STORAGE.getToken()\n        ? <Component {...props} />\n        : (isPrivate ? <RedirectComponent /> : <Component />)\n    )}\n  />);\n}\n\nconst createRoutes = (appRoutes) => appRoutes.map(mapRoutes);\n\nconst App = () => {\n  return (\n    <GlobalProvider>\n      <BrowserRouter>\n        <ThemeProviderApp>\n          <Suspense fallback={renderLoader()}>\n            {\n              createRoutes(appRoutes)\n            }\n          </Suspense>\n        </ThemeProviderApp>\n      </BrowserRouter>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n// import * as serviceWorkerRegistration from './serviceWorkers/serviceWorkerRegistration';\n// import reportWebVitals from './serviceWorkers/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}