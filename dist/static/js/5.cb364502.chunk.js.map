{"version":3,"sources":["pages/BlogsOverview.js"],"names":["columns","id","label","minWidth","useStyles","makeStyles","root","width","container","maxHeight","BlogsOverview","classes","React","useState","page","setPage","rowsPerPage","setRowsPerPage","blogPosts","setBlogPosts","useEffect","a","APIS","getAllBlogPosts","response","posts","map","title","author","status","last_updated","Date","toDateString","fetchData","admin","className","stickyHeader","aria-label","column","align","style","slice","row","hover","role","tabIndex","value","format","rowsPerPageOptions","component","count","length","onChangePage","event","newPage","onChangeRowsPerPage","target","to","primary"],"mappings":"iSAgBMA,EAAU,CACZ,CAAEC,GAAI,QAASC,MAAO,QAASC,SAAU,KACzC,CAAEF,GAAI,SAAUC,MAAO,SAAUC,SAAU,KAC3C,CACIF,GAAI,SACJC,MAAO,SACPC,SAAU,KAEd,CACIF,GAAI,eACJC,MAAO,eACPC,SAAU,MAgCZC,EAAYC,YAAW,CACzBC,KAAM,CACFC,MAAO,QAEXC,UAAW,CACPC,UAAW,UAyFJC,UArFO,WAClB,IAAMC,EAAUP,IAChB,EAAwBQ,IAAMC,SAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsCH,IAAMC,SAAS,IAArD,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAkCL,IAAMC,SAAS,IAAjD,mBAAOK,EAAP,KAAkBC,EAAlB,KA0BA,OAXAC,qBAAU,WAQN,OAPe,uCAAG,4BAAAC,EAAA,sEACSC,IAAKC,kBADd,OACRC,EADQ,OAEdL,EAAwBK,EAASC,MAN/BC,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,OAAQC,EAA1B,EAA0BA,aAA1B,MACL,CAAEH,QAAOC,SAAQC,SAAQC,aAAa,GAAD,OAAK,IAAIC,KAAKD,GAAcE,qBAKvB,IAF7B,2CAAH,oDAKfC,GAEO,eACR,IAGC,cAAC,IAAD,CAASC,OAAO,EAAhB,SACI,eAAC,IAAD,CAAOC,UAAWxB,EAAQL,KAA1B,UACI,cAAC,IAAD,CAAgB6B,UAAWxB,EAAQH,UAAnC,SACI,eAAC,IAAD,CAAO4B,cAAY,EAACC,aAAW,eAA/B,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACKrC,EAAQ0B,KAAI,SAACY,GAAD,OACT,cAAC,IAAD,CAEIC,MAAOD,EAAOC,MACdC,MAAO,CAAErC,SAAUmC,EAAOnC,UAH9B,SAKKmC,EAAOpC,OAJHoC,EAAOrC,WAS5B,cAAC,IAAD,UACKiB,EAAUuB,MAAM3B,EAAOE,EAAaF,EAAOE,EAAcA,GAAaU,KAAI,SAACgB,GACxE,OACI,cAAC,IAAD,CAAUC,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,SACK7C,EAAQ0B,KAAI,SAACY,GACV,IAAMQ,EAAQJ,EAAIJ,EAAOrC,IACzB,OACI,cAAC,IAAD,CAA2BsC,MAAOD,EAAOC,MAAzC,SACKD,EAAOS,QAA2B,kBAAVD,EAAqBR,EAAOS,OAAOD,GAASA,GADzDR,EAAOrC,QAJgByC,EAAIf,iBAe3E,cAAC,IAAD,CACIqB,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,UAAU,MACVC,MAAOhC,EAAUiC,OACjBnC,YAAaA,EACbF,KAAMA,EACNsC,aAlES,SAACC,EAAOC,GAC7BvC,EAAQuC,IAkEIC,oBA/DgB,SAACF,GAC7BpC,GAAgBoC,EAAMG,OAAOV,OAC7B/B,EAAQ,MA+DA,cAAC,IAAD,CAAM0C,GAAI,aAAV,SACI,cAAC,IAAD,CAAQC,SAAO,EAAf,SACK","file":"static/js/5.cb364502.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport Wrapper from './templates/HeaderWrapper';\r\nimport { APIS } from '../serviceCalls';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst columns = [\r\n    { id: 'title', label: 'Title', minWidth: 170 },\r\n    { id: 'author', label: 'Author', minWidth: 100 },\r\n    {\r\n        id: 'status',\r\n        label: 'Status',\r\n        minWidth: 170\r\n    },\r\n    {\r\n        id: 'last_updated',\r\n        label: 'Last updated',\r\n        minWidth: 170\r\n    }\r\n];\r\n\r\nconst createData = (title,\r\n    author,\r\n    status,\r\n    last_updated) => ({\r\n        title,\r\n        author,\r\n        status,\r\n        last_updated\r\n    });\r\n\r\n// const rows = [\r\n//     createData('India', 'IN', 1324171354, 3287263),\r\n//     createData('China', 'CN', 1403500365, 9596961),\r\n//     createData('Italy', 'IT', 60483973, 301340),\r\n//     createData('United States', 'US', 327167434, 9833520),\r\n//     createData('Canada', 'CA', 37602103, 9984670),\r\n//     createData('Australia', 'AU', 25475400, 7692024),\r\n//     createData('Germany', 'DE', 83019200, 357578),\r\n//     createData('Ireland', 'IE', 4857000, 70273),\r\n//     createData('Mexico', 'MX', 126577691, 1972550),\r\n//     createData('Japan', 'JP', 126317000, 377973),\r\n//     createData('France', 'FR', 67022000, 640679),\r\n//     createData('United Kingdom', 'GB', 67545757, 242495),\r\n//     createData('Russia', 'RU', 146793744, 17098246),\r\n//     createData('Nigeria', 'NG', 200962417, 923768),\r\n//     createData('Brazil', 'BR', 210147125, 8515767),\r\n// ];\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: '75vh',\r\n    },\r\n});\r\n\r\nconst BlogsOverview = () => {\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [blogPosts, setBlogPosts] = React.useState([]);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const createRows = (posts) =>\r\n        posts.map(({ title, author, status, last_updated }) =>\r\n            ({ title, author, status, last_updated: `${new Date(last_updated).toDateString()}` }));\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await APIS.getAllBlogPosts();\r\n            setBlogPosts(createRows(response.posts) || []);\r\n        };\r\n\r\n        fetchData();\r\n\r\n        return () => { }\r\n    }, []);\r\n\r\n    return (\r\n        <Wrapper admin={true} >\r\n            <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                        {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {blogPosts.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                                return (\r\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.title}>\r\n                                        {columns.map((column) => {\r\n                                            const value = row[column.id];\r\n                                            return (\r\n                                                <TableCell key={column.id} align={column.align}>\r\n                                                    {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                                </TableCell>\r\n                                            );\r\n                                        })}\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={blogPosts.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n                <Link to={'/admin/new'}>\r\n                    <Button primary>\r\n                        {'Create New'}\r\n                    </Button>\r\n                </Link>\r\n            </Paper>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default BlogsOverview;"],"sourceRoot":""}