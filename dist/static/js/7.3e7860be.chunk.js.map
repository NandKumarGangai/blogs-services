{"version":3,"sources":["constants/appConstants.js","components/Header/index.js","pages/templates/HeaderWrapper.js","serviceCalls/serviceCallHelpers.js","serviceCalls/navigations.js","serviceCalls/createNewBlog/index.js","serviceCalls/index.js","serviceCalls/getAllBlogPosts/index.js","pages/BlogsOverview.js"],"names":["header","TITLE","LOGIN_BTN_TEXT","blogCard","LEARN_MORE_BTN_TEXT","useStyles","makeStyles","theme","root","flexGrow","width","position","top","left","zIndex","menuButton","marginRight","spacing","title","breakpoints","down","textAlign","Header","admin","classes","isAdmin","className","AppBar","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","children","margin","marginBottom","minHeight","borderLeft","HeaderWrapper","defaultHeaders","serviceCallPaths","CREATE_NEW_BLOG","_get","config","GET_ALL_BLOG_POSTS","UPLOAD_BLOG_THUMBNAIL","convertToJson","response","JSON","parse","stringify","error","Error","success","cause","console","info","makeServiceCall","host","path","method","body","headers","modHeaders","log","axios","url","data","navigateToErrorPage","history","push","handleResponse","reset","navigateToAdminOverviewPage","handleError","err","APIS","addNewBlog","reqBody","resetFormValues","fileData","formData","FormData","append","thumbnail","request","then","catch","getAllBlogPosts","res","columns","id","label","minWidth","container","maxHeight","BlogsOverview","React","useState","page","setPage","rowsPerPage","setRowsPerPage","blogPosts","setBlogPosts","useEffect","a","posts","map","author","status","last_updated","Date","toDateString","fetchData","stickyHeader","column","align","style","slice","row","hover","role","tabIndex","value","format","rowsPerPageOptions","component","count","length","onChangePage","event","newPage","onChangeRowsPerPage","target","src"],"mappings":"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","file":"static/js/7.3e7860be.chunk.js","sourcesContent":["export const header = {\r\n    TITLE: 'NANDKUMAR GANGAI',\r\n    LOGIN_BTN_TEXT: 'Login'\r\n}\r\n\r\nexport const blogCard = {\r\n    LEARN_MORE_BTN_TEXT: 'Learn more...'\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport { header } from '../../constants/appConstants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 999\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        [theme.breakpoints.down('sm')]: {\r\n            textAlign: 'center',\r\n        },\r\n    },\r\n}));\r\n\r\nconst Header = ({ admin = false }) => {\r\n    const classes = useStyles();\r\n\r\n    /** Show below sections on admin is available */\r\n    const isAdmin = admin;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    {\r\n                        isAdmin\r\n                            ? (\r\n                                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                                    <MenuIcon />\r\n                                </IconButton>\r\n                            )\r\n                            : null\r\n                    }\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        {header.TITLE}\r\n                    </Typography>\r\n                    {\r\n                        isAdmin\r\n                            ? (\r\n                                <Button color=\"inherit\">{header.LOGIN_BTN_TEXT}</Button>\r\n                            )\r\n                            : null\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Header } from '../../components';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    children: {\r\n        margin: '5rem 10%',\r\n        marginBottom: '0',\r\n        minHeight: 'calc(100vh - 5rem)',\r\n        borderLeft: '1px solid white',\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '4rem 5%',\r\n            minHeight: 'calc(100vh - 4rem)',\r\n        },\r\n    }\r\n}));\r\n\r\nconst HeaderWrapper = ({ children, admin = false }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <Header admin={admin} />\r\n            <div className={classes.children}>\r\n                {children}\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default HeaderWrapper;\r\n","import axios from 'axios';\r\nimport _get from 'lodash/get';\r\nimport config from '../config/default.json';\r\n// import { STORAGE } from '../Utils/storage';\r\n\r\nconst addAuthHeader = () => {\r\n    const token = null; //STORAGE.getToken();\r\n    return token\r\n        ? {\r\n            'Authorization': `${token}`\r\n        }\r\n        : {};\r\n};\r\n\r\nconst defaultHeaders = {\r\n    'Content-Type': 'application/json',\r\n    ...addAuthHeader()\r\n};\r\n\r\nconst defaultMethod = 'post';\r\n\r\nexport const serviceCallPaths = {\r\n    CREATE_NEW_BLOG: _get(config, 'services.create_new_blog.path', ''),\r\n    GET_ALL_BLOG_POSTS: _get(config, 'services.get_all_blog_posts.path', ''),\r\n    UPLOAD_BLOG_THUMBNAIL: _get(config, 'services.upload_blog_thumbnail', ''),\r\n};\r\n\r\nexport const convertToJson = response => {\r\n    try {\r\n        return JSON.parse(JSON.stringify(response));\r\n    } catch (error) {\r\n        throw new Error({\r\n            success: false,\r\n            cause: error\r\n        });\r\n    }\r\n};\r\nconsole.info('Default Headers: ', defaultHeaders);\r\n\r\nexport const makeServiceCall = ({\r\n    host = '',\r\n    path,\r\n    method = defaultMethod,\r\n    body,\r\n    headers = defaultHeaders\r\n}) => {\r\n    const modHeaders = {\r\n        ...headers,\r\n        ...addAuthHeader()\r\n    }\r\n    console.log('headers: ', modHeaders);\r\n    return axios({\r\n        method,\r\n        url: `${host}${path}`,\r\n        data: body,\r\n        headers: modHeaders\r\n    });\r\n};","export const navigateToHome = history => history.push('/');\r\nexport const navigateToLoginPage = history => history.push('/login');\r\nexport const navigateToErrorPage = history => history.push('/error');\r\nexport const navigateToLandingPage = history => history.push('/home');\r\nexport const navigateToProfilePage = history => history.push('/profile');\r\n\r\nexport const navigateToAdminOverviewPage = history => history.push('/admin/overview');","import _get from 'lodash/get';\r\nimport { makeServiceCall, serviceCallPaths, convertToJson } from '../serviceCallHelpers';\r\nimport {\r\n    navigateToAdminOverviewPage,\r\n    navigateToErrorPage\r\n} from '../navigations';\r\n\r\nconst handleResponse = (history, reset) =>\r\n    () => {\r\n        reset();\r\n        navigateToAdminOverviewPage(history);\r\n    };\r\n\r\nconst handleError = history => err => {\r\n    console.error('Custom Error: ', err);\r\n\r\n    return navigateToErrorPage(history);\r\n};\r\n\r\nexport const addNewBlog = (reqBody = {}, history, resetFormValues) => {\r\n\r\n    const fileData = _get(reqBody, 'thumbnail', null);\r\n    console.log('fileData: ', fileData);\r\n    const serviceCalls = [];\r\n    const formData = new FormData();\r\n    if (fileData) {\r\n        formData.append(\"thumbnail\", fileData);\r\n\r\n        // const uploadImage = makeServiceCall({\r\n        //     path: serviceCallPaths.UPLOAD_BLOG_THUMBNAIL,\r\n        //     method: 'put',\r\n        //     body: formData,\r\n        //     headers: {\r\n        //         'Content-Type': 'Multipart/form-data'\r\n        //     }\r\n        // });\r\n        // serviceCalls.push(uploadImage);\r\n\r\n        delete reqBody.thumbnail;\r\n    }\r\n    formData.append(\"document\", JSON.stringify(reqBody));\r\n    const request = {\r\n        path: serviceCallPaths.CREATE_NEW_BLOG,\r\n        method: 'post',\r\n        body: formData\r\n    };\r\n\r\n    return makeServiceCall(request)\r\n        .then(convertToJson)\r\n        .then(handleResponse(history, resetFormValues))\r\n        .catch(handleError(history));\r\n}","import { addNewBlog } from './createNewBlog';\r\nimport { getAllBlogPosts } from './getAllBlogPosts';\r\n\r\nexport const APIS = {\r\n    addNewBlog,\r\n    getAllBlogPosts\r\n}","import _get from 'lodash/get';\r\nimport { makeServiceCall, serviceCallPaths, convertToJson } from '../serviceCallHelpers';\r\nimport { navigateToErrorPage } from '../navigations';\r\n\r\nconst handleResponse = () =>\r\n    (res) => {\r\n        const payload = _get(res, 'data.body', {});\r\n        return payload;\r\n    };\r\n\r\nconst handleError = history => err => {\r\n    console.error('Custom Error: ', err);\r\n\r\n    return navigateToErrorPage(history);\r\n};\r\n\r\nexport const getAllBlogPosts = (history) => {\r\n    const request = {\r\n        path: serviceCallPaths.GET_ALL_BLOG_POSTS,\r\n        method: 'get',\r\n    };\r\n\r\n    return makeServiceCall(request)\r\n        .then(convertToJson)\r\n        .then(handleResponse())\r\n        .catch(handleError(history));\r\n}","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport Wrapper from './templates/HeaderWrapper';\r\nimport { APIS } from '../serviceCalls';\r\n\r\nconst columns = [\r\n    { id: 'title', label: 'Title', minWidth: 170 },\r\n    { id: 'author', label: 'Author', minWidth: 100 },\r\n    {\r\n        id: 'status',\r\n        label: 'Status',\r\n        minWidth: 170\r\n    },\r\n    {\r\n        id: 'last_updated',\r\n        label: 'Last updated',\r\n        minWidth: 170\r\n    }\r\n];\r\n\r\nconst createData = (title,\r\n    author,\r\n    status,\r\n    last_updated) => ({\r\n        title,\r\n        author,\r\n        status,\r\n        last_updated\r\n    });\r\n\r\n// const rows = [\r\n//     createData('India', 'IN', 1324171354, 3287263),\r\n//     createData('China', 'CN', 1403500365, 9596961),\r\n//     createData('Italy', 'IT', 60483973, 301340),\r\n//     createData('United States', 'US', 327167434, 9833520),\r\n//     createData('Canada', 'CA', 37602103, 9984670),\r\n//     createData('Australia', 'AU', 25475400, 7692024),\r\n//     createData('Germany', 'DE', 83019200, 357578),\r\n//     createData('Ireland', 'IE', 4857000, 70273),\r\n//     createData('Mexico', 'MX', 126577691, 1972550),\r\n//     createData('Japan', 'JP', 126317000, 377973),\r\n//     createData('France', 'FR', 67022000, 640679),\r\n//     createData('United Kingdom', 'GB', 67545757, 242495),\r\n//     createData('Russia', 'RU', 146793744, 17098246),\r\n//     createData('Nigeria', 'NG', 200962417, 923768),\r\n//     createData('Brazil', 'BR', 210147125, 8515767),\r\n// ];\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: '75vh',\r\n    },\r\n});\r\n\r\nconst BlogsOverview = () => {\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [blogPosts, setBlogPosts] = React.useState([]);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const createRows = (posts) =>\r\n        posts.map(({ title, author, status, last_updated }) =>\r\n            ({ title, author, status, last_updated: `${new Date(last_updated).toDateString()}` }));\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await APIS.getAllBlogPosts();\r\n            setBlogPosts(createRows(response.posts) || []);\r\n            console.log('response.body.posts: ', response.posts);\r\n        };\r\n\r\n        fetchData();\r\n\r\n        return () => { }\r\n    }, []);\r\n\r\n    return (\r\n        <Wrapper admin={true} >\r\n            <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                        {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {blogPosts.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                                return (\r\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.title}>\r\n                                        {columns.map((column) => {\r\n                                            const value = row[column.id];\r\n                                            return (\r\n                                                <TableCell key={column.id} align={column.align}>\r\n                                                    {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                                </TableCell>\r\n                                            );\r\n                                        })}\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={blogPosts.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n            <img src={'/077ceb18c1bb903f0ed4f2045e04d0a2'} />\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default BlogsOverview;"],"sourceRoot":""}