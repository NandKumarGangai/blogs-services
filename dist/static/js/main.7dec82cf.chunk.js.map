{"version":3,"sources":["serviceCalls/serviceCallHelpers.js","serviceCalls/navigations.js","serviceCalls/createNewBlog/index.js","serviceCalls/index.js","serviceCalls/getAllBlogPosts/index.js","constants/appConstants.js","components/Header/index.js","pages/templates/HeaderWrapper.js","context/AppReducer.js","context/GlobalState.js","themeProvider/index.js","components/Atoms/DateField.js","components/Atoms/InputTextField.js","components/Atoms/MarkDownEditor.js","components/Atoms/SelectField.js","components/Atoms/InputFile.js","validations/newBlogsValidations.js","pages/CreateNewBlogPage.js","routes/index.js","App.js","index.js"],"names":["defaultHeaders","serviceCallPaths","CREATE_NEW_BLOG","_get","config","GET_ALL_BLOG_POSTS","UPLOAD_BLOG_THUMBNAIL","convertToJson","response","JSON","parse","stringify","error","Error","success","cause","console","info","makeServiceCall","host","path","method","body","headers","modHeaders","log","axios","url","data","navigateToErrorPage","history","push","handleResponse","reset","navigateToAdminOverviewPage","handleError","err","APIS","addNewBlog","reqBody","resetFormValues","fileData","formData","FormData","append","thumbnail","request","then","catch","getAllBlogPosts","res","header","TITLE","LOGIN_BTN_TEXT","blogCard","LEARN_MORE_BTN_TEXT","useStyles","makeStyles","theme","root","flexGrow","width","position","top","left","zIndex","menuButton","marginRight","spacing","title","breakpoints","down","textAlign","Header","admin","classes","isAdmin","className","AppBar","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","children","margin","marginBottom","minHeight","HeaderWrapper","AppReducer","state","type","transactions","filter","transaction","_id","blog_posts","loading","initialState","GlobalContext","createContext","GlobalProvider","useReducer","dispatch","getBlogPosts","a","posts","addTransaction","Axios","post","Provider","value","ThemeProviderApp","React","useMemo","createMuiTheme","palette","ThemeProvider","CssBaseline","formControl","formLabel","padding","MarkDownEditor","id","label","formik","FormControl","component","touched","Boolean","errors","TextField","name","fullWidth","textField","InputLabelProps","shrink","values","onChange","handleChange","helperText","InputTextField","classNames","autoComplete","FormLabel","height","setFieldValue","preview","FormHelperText","SelectField","menuItems","InputLabel","Select","labelId","e","map","idx","desc","MenuItem","border","borderRadius","borderRed","Input","accept","target","files","validationSchema","yup","required","sub_title","quote","content","date_publish","nullable","status","author","author_mail","email","display","justifyContent","alignItems","flexDirection","halfWidth","inputFile","boxSizing","defaultValues","withRouter","useFormik","initialValues","onSubmit","resetForm","enableReinitialize","handleSubmit","Grid","container","item","md","xs","DateField","InputFile","saveBtn","appRoutes","route","isPrivate","Component","lazy","CreateNewBlogPageComponent","STORAGE","RedirectComponent","to","mapRoutes","isLogin","exact","render","props","createRoutes","App","fallback","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7dec82cf.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport _get from 'lodash/get';\r\nimport config from '../config/default.json';\r\n// import { STORAGE } from '../Utils/storage';\r\n\r\nconst addAuthHeader = () => {\r\n    const token = null; //STORAGE.getToken();\r\n    return token\r\n        ? {\r\n            'Authorization': `${token}`\r\n        }\r\n        : {};\r\n};\r\n\r\nconst defaultHeaders = {\r\n    'Content-Type': 'application/json',\r\n    ...addAuthHeader()\r\n};\r\n\r\nconst defaultMethod = 'post';\r\n\r\nexport const serviceCallPaths = {\r\n    CREATE_NEW_BLOG: _get(config, 'services.create_new_blog.path', ''),\r\n    GET_ALL_BLOG_POSTS: _get(config, 'services.get_all_blog_posts.path', ''),\r\n    UPLOAD_BLOG_THUMBNAIL: _get(config, 'services.upload_blog_thumbnail', ''),\r\n};\r\n\r\nexport const convertToJson = response => {\r\n    try {\r\n        return JSON.parse(JSON.stringify(response));\r\n    } catch (error) {\r\n        throw new Error({\r\n            success: false,\r\n            cause: error\r\n        });\r\n    }\r\n};\r\nconsole.info('Default Headers: ', defaultHeaders);\r\n\r\nexport const makeServiceCall = ({\r\n    host = '',\r\n    path,\r\n    method = defaultMethod,\r\n    body,\r\n    headers = defaultHeaders\r\n}) => {\r\n    const modHeaders = {\r\n        ...headers,\r\n        ...addAuthHeader()\r\n    }\r\n    console.log('headers: ', modHeaders);\r\n    return axios({\r\n        method,\r\n        url: `${host}${path}`,\r\n        data: body,\r\n        headers: modHeaders\r\n    });\r\n};","export const navigateToHome = history => history.push('/');\r\nexport const navigateToLoginPage = history => history.push('/login');\r\nexport const navigateToErrorPage = history => history.push('/error');\r\nexport const navigateToLandingPage = history => history.push('/home');\r\nexport const navigateToProfilePage = history => history.push('/profile');\r\n\r\nexport const navigateToAdminOverviewPage = history => history.push('/admin/overview');","import _get from 'lodash/get';\r\nimport { makeServiceCall, serviceCallPaths, convertToJson } from '../serviceCallHelpers';\r\nimport {\r\n    navigateToAdminOverviewPage,\r\n    navigateToErrorPage\r\n} from '../navigations';\r\n\r\nconst handleResponse = (history, reset) =>\r\n    () => {\r\n        reset();\r\n        navigateToAdminOverviewPage(history);\r\n    };\r\n\r\nconst handleError = history => err => {\r\n    console.error('Custom Error: ', err);\r\n\r\n    return navigateToErrorPage(history);\r\n};\r\n\r\nexport const addNewBlog = (reqBody = {}, history, resetFormValues) => {\r\n\r\n    const fileData = _get(reqBody, 'thumbnail', null);\r\n    console.log('fileData: ', fileData);\r\n    const serviceCalls = [];\r\n    const formData = new FormData();\r\n    if (fileData) {\r\n        formData.append(\"thumbnail\", fileData);\r\n\r\n        // const uploadImage = makeServiceCall({\r\n        //     path: serviceCallPaths.UPLOAD_BLOG_THUMBNAIL,\r\n        //     method: 'put',\r\n        //     body: formData,\r\n        //     headers: {\r\n        //         'Content-Type': 'Multipart/form-data'\r\n        //     }\r\n        // });\r\n        // serviceCalls.push(uploadImage);\r\n\r\n        delete reqBody.thumbnail;\r\n    }\r\n    formData.append(\"document\", JSON.stringify(reqBody));\r\n    const request = {\r\n        path: serviceCallPaths.CREATE_NEW_BLOG,\r\n        method: 'post',\r\n        body: formData\r\n    };\r\n\r\n    return makeServiceCall(request)\r\n        .then(convertToJson)\r\n        .then(handleResponse(history, resetFormValues))\r\n        .catch(handleError(history));\r\n}","import { addNewBlog } from './createNewBlog';\r\nimport { getAllBlogPosts } from './getAllBlogPosts';\r\n\r\nexport const APIS = {\r\n    addNewBlog,\r\n    getAllBlogPosts\r\n}","import _get from 'lodash/get';\r\nimport { makeServiceCall, serviceCallPaths, convertToJson } from '../serviceCallHelpers';\r\nimport { navigateToErrorPage } from '../navigations';\r\n\r\nconst handleResponse = () =>\r\n    (res) => {\r\n        const payload = _get(res, 'data.body', {});\r\n        return payload;\r\n    };\r\n\r\nconst handleError = history => err => {\r\n    console.error('Custom Error: ', err);\r\n\r\n    return navigateToErrorPage(history);\r\n};\r\n\r\nexport const getAllBlogPosts = (history) => {\r\n    const request = {\r\n        path: serviceCallPaths.GET_ALL_BLOG_POSTS,\r\n        method: 'get',\r\n    };\r\n\r\n    return makeServiceCall(request)\r\n        .then(convertToJson)\r\n        .then(handleResponse())\r\n        .catch(handleError(history));\r\n}","export const header = {\r\n    TITLE: 'NANDKUMAR GANGAI',\r\n    LOGIN_BTN_TEXT: 'Login'\r\n}\r\n\r\nexport const blogCard = {\r\n    LEARN_MORE_BTN_TEXT: 'Learn more...'\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport { header } from '../../constants/appConstants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 999\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        [theme.breakpoints.down('sm')]: {\r\n            textAlign: 'center',\r\n        },\r\n    },\r\n}));\r\n\r\nconst Header = ({ admin = false }) => {\r\n    const classes = useStyles();\r\n\r\n    /** Show below sections on admin is available */\r\n    const isAdmin = admin;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    {\r\n                        isAdmin\r\n                            ? (\r\n                                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                                    <MenuIcon />\r\n                                </IconButton>\r\n                            )\r\n                            : null\r\n                    }\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        {header.TITLE}\r\n                    </Typography>\r\n                    {\r\n                        isAdmin\r\n                            ? (\r\n                                <Button color=\"inherit\">{header.LOGIN_BTN_TEXT}</Button>\r\n                            )\r\n                            : null\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Header } from '../../components';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    children: {\r\n        margin: '5rem 10%',\r\n        marginBottom: '5rem',\r\n        minHeight: 'calc(100vh - 5rem)',\r\n        // borderLeft: '1px solid white',\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '4rem 5%',\r\n            minHeight: 'calc(100vh - 4rem)',\r\n        },\r\n    }\r\n}));\r\n\r\nconst HeaderWrapper = ({ children, admin = false }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <Header admin={admin} />\r\n            <div className={classes.children}>\r\n                {children}\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default HeaderWrapper;\r\n","const AppReducer = (state, { type, data }) => {\r\n    switch (type) {\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction._id !== data)\r\n            }\r\n\r\n        case 'GET_BLOG_POSTS':\r\n            return {\r\n                ...state,\r\n                blog_posts: [ ...data ]\r\n            }\r\n\r\n        case 'GET_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                transactions: data\r\n            }\r\n\r\n        case 'TRANSACTION_ERROR':\r\n            return {\r\n                ...state,\r\n                error: data\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default AppReducer;","import React, { createContext, useReducer } from 'react';\r\nimport Axios from 'axios';\r\nimport AppReducer from './AppReducer';\r\nimport { APIS } from '../serviceCalls';\r\n\r\nconst HOST = 'https://expense-tracker-server-96.herokuapp.com';\r\n\r\nconst initialState = {\r\n    blog_posts: [],\r\n    error: null,\r\n    loading: true\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    const getBlogPosts = async () => {\r\n        try {\r\n            const res = await APIS.getAllBlogPosts();\r\n\r\n            dispatch({\r\n                type: 'GET_BLOG_POSTS',\r\n                data: res.posts\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                data: error.response.data.error || { error: 'error occured...'}\r\n            });\r\n        }\r\n    }\r\n\r\n    // const deleteTransaction = async (id) => {\r\n    //     try {\r\n    //         await Axios.delete(`${HOST}/api/v1/transactions/${id}`);\r\n\r\n    //         dispatch({\r\n    //             type: 'DELETE_TRANSACTION',\r\n    //             data: id\r\n    //         });        \r\n    //     } catch (error) {\r\n    //         dispatch({\r\n    //             type: 'TRANSACTION_ERROR',\r\n    //             data: error.response.data.error\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    const addTransaction = async (transaction) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n            const res = await Axios.post(`${HOST}/api/v1/transactions`, transaction, config);\r\n\r\n            dispatch({\r\n                type: 'ADD_TRANSACTION',\r\n                data: res.data.data\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                data: error.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            blog_posts: state.blog_posts,\r\n            error: state.error,\r\n            loading: state.loading,\r\n            getBlogPosts,\r\n            // deleteTransaction,\r\n            addTransaction\r\n        }}>\r\n            { children }\r\n        </GlobalContext.Provider>\r\n    )\r\n}","import React from 'react';\r\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nconst ThemeProviderApp = ({ children }) => {\r\n  const prefersDarkMode = false; //useMediaQuery('(prefers-color-scheme: dark)');\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        palette: {\r\n          type: prefersDarkMode ? 'dark' : 'light',\r\n        },\r\n      }),\r\n    [prefersDarkMode],\r\n  );\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline/>\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default ThemeProviderApp;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(0),\r\n        width: '75%'\r\n    },\r\n    formLabel: {\r\n        padding: '0.5rem 0'\r\n    }\r\n}));\r\n\r\nconst MarkDownEditor = ({ id, label, formik }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <FormControl\r\n            component=\"span\"\r\n            error={formik.touched[id] && Boolean(formik.errors[id])}\r\n            className={classes.formControl}\r\n        >\r\n            <div>\r\n                {/* <FormLabel component=\"legend\" className={classes.formLabel} >{label}</FormLabel> */}\r\n                <TextField\r\n                    id={id}\r\n                    name={id}\r\n                    label={label}\r\n                    type=\"date\"\r\n                    fullWidth\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    aria-label={label}\r\n                    value={formik.values[id]}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched[id] && Boolean(formik.errors[id])}\r\n                    helperText={formik.touched[id] && formik.errors[id]}\r\n                />\r\n            </div>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default MarkDownEditor;\r\n","import TextField from '@material-ui/core/TextField';\r\n\r\nconst InputTextField = ({ formik, id, label, classNames='' }) => {\r\n    return (\r\n        <TextField\r\n            classNames={classNames}\r\n            autoComplete=''\r\n            name={id}\r\n            variant='outlined'\r\n            fullWidth\r\n            id={id}\r\n            label={label}\r\n            aria-label={label}\r\n            value={formik.values[id]}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched[id] && Boolean(formik.errors[id])}\r\n            helperText={formik.touched[id] && formik.errors[id]}\r\n        />\r\n    )\r\n}\r\n\r\nexport default InputTextField;\r\n","import MDEditor from '@uiw/react-md-editor';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(0),\r\n        width: '100%'\r\n    },\r\n    formLabel: {\r\n        padding: '0.5rem 0'\r\n    }\r\n}));\r\n\r\nconst MarkDownEditor = ({ id, label, formik }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <FormControl\r\n            component=\"span\"\r\n            error={formik.touched[id] && Boolean(formik.errors[id])}\r\n            className={classes.formControl}\r\n        >\r\n            <div>\r\n                <FormLabel component=\"legend\" className={classes.formLabel} >{label}</FormLabel>\r\n                <MDEditor\r\n                    height={'50vh'}\r\n                    value={formik.values[id]}\r\n                    onChange={(data) => { formik.setFieldValue(id, data)}}\r\n                    preview={'edit'}\r\n                />\r\n                {/* Future scope */}\r\n                {\r\n                    false ?\r\n                    (\r\n                        <MDEditor.Markdown source={formik.values[id]} />\r\n                    ) : null\r\n                }\r\n            </div>\r\n            {\r\n                formik.touched[id] && Boolean(formik.errors[id])\r\n                    ? <FormHelperText>{formik.touched[id] && formik.errors[id]}</FormHelperText>\r\n                    : null\r\n            }\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default MarkDownEditor;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(0),\r\n        width: '75%'\r\n    },\r\n    formLabel: {\r\n        padding: '0.5rem 0'\r\n    }\r\n}));\r\n\r\nconst SelectField = ({ formik, id, label, menuItems = [] }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <FormControl\r\n            variant=\"outlined\"\r\n            error={formik.touched[id] && Boolean(formik.errors[id])}\r\n            className={classes.formControl}\r\n        >\r\n            <InputLabel id={`${id}-label`}>{label}</InputLabel>\r\n            <Select\r\n                labelId={id}\r\n                id={id}\r\n                name={id}\r\n                label={label}\r\n                // autoWidth={false}\r\n                // displayEmpty={false}\r\n                value={formik.values[id]}\r\n                onChange={e => formik.handleChange(e)}\r\n            >\r\n                {\r\n                    menuItems.map(({ value, desc }, idx) => <MenuItem value={value} key={idx}>{desc}</MenuItem>)\r\n                }\r\n            </Select>\r\n            {\r\n                formik.touched[id] && Boolean(formik.errors[id])\r\n                    ? <FormHelperText>{formik.touched[id] && formik.errors[id]}</FormHelperText>\r\n                    : null\r\n            }\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default SelectField;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { Input } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(0),\r\n        width: '75%',\r\n    },\r\n    textField: {\r\n        border: '1px solid #666',\r\n        borderRadius: '4px',\r\n        padding: '12px',\r\n        '&:hover': {\r\n            border: '1px solid',\r\n        }\r\n    },\r\n    borderRed: {\r\n        border: '1px solid red',\r\n    }\r\n}));\r\n\r\nconst MarkDownEditor = ({ id, label, formik }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <FormControl\r\n            component=\"span\"\r\n            error={Boolean(formik.errors[id])}\r\n            className={classes.formControl}\r\n        >\r\n            <div>\r\n                <FormLabel component=\"legend\" className={classes.formLabel} >{label}</FormLabel>\r\n                <Input\r\n                    id={id}\r\n                    name={id}\r\n                    label={label}\r\n                    type=\"file\"\r\n                    accept='image/*'\r\n                    fullWidth\r\n                    className={`${classes.textField} ${formik.touched[id] && Boolean(formik.errors[id]) ? classes.borderRed : \"\"}`}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    aria-label={label}\r\n                    onChange={e => formik.setFieldValue(id, e.target.files[0])}\r\n                />\r\n                {\r\n                    formik.touched[id] && Boolean(formik.errors[id])\r\n                        ? <FormHelperText>{formik.touched[id] && formik.errors[id]}</FormHelperText>\r\n                        : null\r\n                }\r\n            </div>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default MarkDownEditor;\r\n","import * as yup from 'yup';\r\n\r\nexport const validationSchema = yup.object({\r\n    title: yup.string('Enter blog title').required('Title is required'),\r\n    sub_title: yup.string('Enter sub-title'),\r\n    quote: yup.string('Enter quote'),\r\n    content: yup.string().required('Please add some content in mardown format.'),\r\n    date_publish: yup.date('Please select publish date').required('Date is required').nullable('Please select date of publish'),\r\n    status: yup.string('Please select blog status').required('Please select blog status'),\r\n    author: yup.string('Please enter author name').required('Please enter author name'),\r\n    author_mail: yup\r\n        .string('Enter author\\'s email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n        thumbnail: yup.mixed('Please upload thumbnail.').required('Thumbnail is required'),\r\n});\r\n\r\n\r\n/*\r\nexport const validationSchema = yup.object({\r\n    firstName: yup\r\n        .string('Enter your first name')\r\n        .required('Email is required'),\r\n    lastName: yup\r\n        .string('Enter your last name')\r\n        .required('Email is required'),\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    mobileNumber: yup.string('Enter your mobile number')\r\n        .required('Mobile number is required')\r\n        .matches(/^[0-9]+$/, \"Must be only digits\")\r\n        .min(10, 'Must be exactly 10 digits')\r\n        .max(10, 'Must be exactly 10 digits'),\r\n    gender: yup\r\n        .string('Please select value')\r\n        .required('Gender is required'),\r\n    dateOfBirth: yup\r\n        .date('Please select your date of birth')\r\n        .required('Date of birth is required')\r\n        .nullable('Please select DOB'),\r\n    addressLine1: yup\r\n        .string('Enter your address')\r\n        .required('Address line 1 is required')\r\n        .max(50),\r\n    addressLine2: yup\r\n        .string('Enter your address')\r\n        .max(50),\r\n    addressLine3: yup\r\n        .string('Enter your address')\r\n        .max(50),\r\n    city: yup\r\n        .string('Enter your city')\r\n        .required('City is required')\r\n        .max(25),\r\n    district: yup\r\n        .string('Enter your district')\r\n        .required('District is required')\r\n        .max(25),\r\n    state: yup\r\n        .string('Enter your state')\r\n        .required('State is required')\r\n        .max(25),\r\n    pincode: yup\r\n        .string('Enter your pincode')\r\n        .matches(/^[0-9]+$/, \"Must be only digits\")\r\n        .required('Pincode is required')\r\n        .min(6)\r\n        .max(6)\r\n}); */","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Typography } from '@material-ui/core';\r\nimport DateField from '../components/Atoms/DateField';\r\nimport InputTextField from '../components/Atoms/InputTextField';\r\nimport MarkDownEditor from '../components/Atoms/MarkDownEditor';\r\nimport SelectField from '../components/Atoms/SelectField';\r\nimport InputFile from '../components/Atoms/InputFile';\r\n\r\nimport Wrapper from './templates/HeaderWrapper';\r\nimport { validationSchema } from '../validations/newBlogsValidations';\r\nimport { APIS } from '../serviceCalls';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'left',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n    },\r\n    halfWidth: {\r\n        width: '50%',\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: '100%',\r\n        },\r\n    },\r\n    inputFile: {\r\n        width: '50%',\r\n        boxSizing: 'margin-box',\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: '100%',\r\n        },\r\n    },\r\n    formControl: {\r\n        width: '100%'\r\n    }\r\n}));\r\n\r\nconst defaults = {\r\n    title: '',\r\n    sub_title: '',\r\n    quote: '',\r\n    content: '',\r\n    date_publish: '',\r\n    status: '',\r\n    author: '',\r\n    author_mail: '',\r\n    thumbnail: ''\r\n};\r\n\r\nconst defaultValues = {\r\n    title: '',\r\n    sub_title: '',\r\n    quote: '',\r\n    content: '',\r\n    date_publish: '30-05-2021',\r\n    status: 'published',\r\n    author: 'Nandkumar Gangai',\r\n    author_mail: 'nandkumargangai@gmail.com',\r\n    thumbnail: ''\r\n};\r\n\r\nconst CreateNewBlogPage = ({ history }) => {\r\n    const classes = useStyles();\r\n\r\n    const formik = useFormik({\r\n        initialValues: defaultValues,\r\n        validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            console.log(values);\r\n            APIS.addNewBlog(values, history, resetForm);\r\n        },\r\n        enableReinitialize: true\r\n    });\r\n\r\n    return (\r\n        <Wrapper admin={true} >\r\n            <section>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <Grid container spacing={3} className={classes.root}>\r\n                        <Grid item md={12} xs={12}>\r\n                            <Typography variant='h1'>\r\n                                {'Create new blog'}\r\n                            </Typography>\r\n                            <hr />\r\n                        </Grid>\r\n                        <Grid item md={12} xs={12} className={classes.halfWidth}>\r\n                            <InputTextField\r\n                                id='title'\r\n                                label='Enter blog title'\r\n                                formik={formik}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={12} xs={12} className={classes.halfWidth}>\r\n                            <InputTextField\r\n                                id='sub_title'\r\n                                label='Enter sub title'\r\n                                formik={formik}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={12} xs={12} className={classes.halfWidth}>\r\n                            <InputTextField\r\n                                id='quote'\r\n                                label='Enter quote'\r\n                                formik={formik}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={12} xs={12} className={classes.halfWidth}>\r\n                            <MarkDownEditor\r\n                                id='content'\r\n                                name='content'\r\n                                label='Blog content'\r\n                                formik={formik}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={12} xs={12} className={classes.halfWidth}>\r\n                            <DateField\r\n                                id='date_publish'\r\n                                name='date_publish'\r\n                                label='Date of publish'\r\n                                formik={formik}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={12} xs={12} className={classes.halfWidth}>\r\n                            <SelectField\r\n                                id='status'\r\n                                name='status'\r\n                                label='Status'\r\n                                menuItems={[\r\n                                    {\r\n                                        value: 'draft',\r\n                                        desc: 'Draft'\r\n                                    },\r\n                                    {\r\n                                        value: 'published',\r\n                                        desc: 'Published'\r\n                                    }\r\n                                ]}\r\n                                formik={formik}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={12} xs={12} className={classes.inputFile}>\r\n                            <InputFile\r\n                                id='thumbnail'\r\n                                name='thumbnail'\r\n                                label='Add thumbnail'\r\n                                formik={formik}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={12} xs={12} className={classes.halfWidth}>\r\n                            <InputTextField\r\n                                id='author'\r\n                                name='author'\r\n                                label={`Enter author's full name`}\r\n                                formik={formik}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={12} xs={12} className={classes.halfWidth}>\r\n                            <InputTextField\r\n                                id='author_mail'\r\n                                name='author_mail'\r\n                                label={`Enter author's email id`}\r\n                                formik={formik}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={8} xs={12} className=\"flex-center\">\r\n                            <Button\r\n                                type='submit'\r\n                                fullWidth\r\n                                variant='contained'\r\n                                color='primary'\r\n                                className={classes.saveBtn}\r\n                            >\r\n                                {'Save Profile'}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </section>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default withRouter(CreateNewBlogPage);\r\n","import { lazy } from 'react';\r\nimport CreateNewBlogPageComponent from '../pages/CreateNewBlogPage';\r\n\r\nconst HomePageComponent = lazy(() => import('../pages/HomePage'));\r\nconst LoginPageComponent = lazy(() => import('../pages/LoginPage'));\r\nconst BlogPageComponent = lazy(() => import('../pages/BlogPage'));\r\nconst BlogsOverviewComponent = lazy(() => import('../pages/BlogsOverview'));\r\n// const CreateNewBlogPageComponent = lazy(() => import('../pages/CreateNewBlogPage'));\r\n\r\nexport const appRoutes = [\r\n    {\r\n        route: '/',\r\n        isPrivate: false,\r\n        Component: HomePageComponent\r\n        // Component: CreateNewBlogPageComponent\r\n    },\r\n    {\r\n        route: '/admin/login',\r\n        isPrivate: false,\r\n        Component: LoginPageComponent\r\n    },\r\n    {\r\n        route: '/blog/:title',\r\n        isPrivate: false,\r\n        Component: BlogPageComponent\r\n    },\r\n    {\r\n        route: '/admin/overview',\r\n        isPrivate: false,\r\n        Component: BlogsOverviewComponent\r\n    },\r\n    {\r\n        route: '/admin/new',\r\n        isPrivate: false,\r\n        Component: CreateNewBlogPageComponent\r\n    }\r\n];","import React, { Suspense } from 'react';\nimport { Redirect, Route, BrowserRouter } from \"react-router-dom\";\n\nimport { GlobalProvider } from './context/GlobalState';\nimport ThemeProviderApp from './themeProvider';\n\nimport { appRoutes } from './routes';\n\nconst STORAGE = {\n  getToken: () => { }\n};\n\nconst renderLoader = () => <h1>Loading...</h1>;\n\nconst RedirectComponent = () => <Redirect to='/login' />;\n\nconst mapRoutes = ({ route, isPrivate, Component }) => {\n  const isLogin = STORAGE.getToken() || false;\n  console.log('login status: ', isLogin);\n\n  return (<Route\n    exact path={route}\n    render={props => (\n      isPrivate && STORAGE.getToken()\n        ? <Component {...props} />\n        : (isPrivate ? <RedirectComponent /> : <Component />)\n    )}\n  />);\n}\n\nconst createRoutes = (appRoutes) => appRoutes.map(mapRoutes);\n\nconst App = () => {\n  return (\n    <GlobalProvider>\n      <BrowserRouter>\n        <ThemeProviderApp>\n          <Suspense fallback={renderLoader()}>\n            {\n              createRoutes(appRoutes)\n            }\n          </Suspense>\n        </ThemeProviderApp>\n      </BrowserRouter>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n// import * as serviceWorkerRegistration from './serviceWorkers/serviceWorkerRegistration';\n// import reportWebVitals from './serviceWorkers/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}